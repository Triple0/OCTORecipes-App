@model IEnumerable<OCTORecipes.Models.Recipe>

@{
    ViewData["Title"] = "Recipe Page";
}

<h1>Recipes</h1>

<p>
    <a asp-action="Create">Create New Recipe</a>
</p>

<!-- Reference: https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/search?view=aspnetcore-3.1 -->
<form asp-controller="Recipes" asp-action="Index" method="get">
    <p>
        Recipe Name: <input type="text" name="SearchParameter">
        <input type="submit" value="Search" />
    </p>
</form>

<div class="table-responsive">
    <table class="table table-striped table-sm">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.RecipePicture)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RecipeName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DishType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RecipeDescription)
                </th>

                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    <!--https://forums.asp.net/t/2147423.aspx?upload+and+display+image+from+database+for+asp+net+core+2+1+-->
                    <img src="@Url.Content("~/images/recipe_images/"+item.RecipePicture)" alt="Recipe Image" height="100" width="100" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RecipeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DishType)
                </td>
                <td>
                    <div style="width:100px; word-wrap: break-word">
                        @Html.DisplayFor(modelItem => item.RecipeDescription)
                    </div>
                </td>

                <td>
                    <a asp-action="Edit" asp-route-id="@item.RecipeId">Edit Recipe</a> |
                    <a asp-action="Details" asp-route-id="@item.RecipeId">View Recipe Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.RecipeId">Delete Recipe</a>
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>
